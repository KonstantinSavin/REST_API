// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add": {
            "post": {
                "description": "add new song to library",
                "consumes": [
                    "appcication/json"
                ],
                "produces": [
                    "appcication/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "AddSong",
                "operationId": "add-song",
                "parameters": [
                    {
                        "description": "add song",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    }
                }
            }
        },
        "/delete/{id}": {
            "delete": {
                "description": "delete song from library",
                "consumes": [
                    "appcication/json"
                ],
                "produces": [
                    "appcication/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "DeleteSong",
                "operationId": "delete-song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    }
                }
            }
        },
        "/songs": {
            "post": {
                "description": "get songs with filtration and pagination",
                "consumes": [
                    "appcication/json"
                ],
                "produces": [
                    "appcication/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "GetSongs",
                "operationId": "get-songs",
                "parameters": [
                    {
                        "description": "filter",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Filter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Filter"
                            }
                        }
                    }
                }
            }
        },
        "/update/{id}": {
            "patch": {
                "description": "update song from library",
                "consumes": [
                    "appcication/json"
                ],
                "produces": [
                    "appcication/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "UpdateSong",
                "operationId": "update-song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "delete song",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "storage.Filter": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "song": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Music library",
	Description:      "API server for music library",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
