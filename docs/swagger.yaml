basePath: /
definitions:
  model.EnrichedSong:
    properties:
      group:
        type: string
      groupID:
        type: integer
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  model.Filter:
    properties:
      group_id:
        type: integer
      group_name:
        type: string
      id:
        type: string
      page:
        type: integer
      per_page:
        type: integer
      song_name:
        type: string
    type: object
  model.PaginatedText:
    properties:
      couplets:
        items:
          type: string
        type: array
    type: object
  model.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      song:
        type: string
    type: object
  model.SongTextPagination:
    properties:
      id:
        type: integer
      page:
        type: integer
      paginated_text:
        $ref: '#/definitions/model.PaginatedText'
      per_page:
        type: integer
      text:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API server for music library
  title: Music library
  version: "1.0"
paths:
  /add:
    post:
      consumes:
      - application/json
      description: This endpoint allows to add a new song to the library.
      operationId: add-song
      parameters:
      - description: Song object to be added
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created song
          schema:
            $ref: '#/definitions/model.EnrichedSong'
        "400":
          description: Invalid input
          schema:
            type: string
        "422":
          description: Unprocessable entity
          schema:
            type: string
      summary: Add a new song to the library
      tags:
      - songs
  /delete/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint allows the user to delete a song by its ID from the
        library.
      operationId: delete-song
      parameters:
      - description: ID of the song to be deleted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted song
        "422":
          description: Unprocessable entity
          schema:
            type: string
      summary: Delete a song from the library
      tags:
      - songs
  /songs:
    post:
      consumes:
      - application/json
      description: This endpoint allows the user to retrieve a filtered list of songs
        with pagination information.
      operationId: get-songs
      parameters:
      - description: Filtering parameters for songs
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Filter'
      produces:
      - application/json
      responses:
        "200":
          description: A list of enriched songs
          schema:
            items:
              $ref: '#/definitions/model.EnrichedSong'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Songs not found
          schema:
            type: string
        "422":
          description: Unprocessable entity
          schema:
            type: string
      summary: Retrieves a list of songs with filtering and pagination
      tags:
      - songs
  /songtext/{id}:
    post:
      consumes:
      - application/json
      description: This endpoint retrieves the text of a song, broken down into couplets,
        with support for pagination.
      operationId: get-couplets
      parameters:
      - description: Filters and pagination parameters
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.SongTextPagination'
      produces:
      - application/json
      responses:
        "200":
          description: Returns paginated couplets of the song
          schema:
            $ref: '#/definitions/model.PaginatedText'
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Song not found
          schema:
            type: string
        "422":
          description: Unprocessable entity
          schema:
            type: string
      summary: Get the song text with pagination by couplets
      tags:
      - songs
  /update/{id}:
    patch:
      consumes:
      - application/json
      description: This endpoint allows the user to update an existing song by its
        ID in the library.
      operationId: update-song
      parameters:
      - description: ID of the song to be updated
        in: path
        name: id
        required: true
        type: string
      - description: New song data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.EnrichedSong'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EnrichedSong'
        "400":
          description: Invalid input
          schema:
            type: string
        "422":
          description: Unprocessable entity
          schema:
            type: string
      summary: Update a song in the library
      tags:
      - songs
schemes:
- http
swagger: "2.0"
